{
	"name": "vscode-coverage-gutters",
	"displayName": "Coverage Gutters",
	"description": "Display test coverage generated by lcov or xml - works with many languages",
	"version": "2.9.1",
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/ryanluker/vscode-coverage-gutters"
	},
	"icon": "app_images/icon.png",
	"galleryBanner": {
		"color": "#24381b",
		"theme": "dark"
	},
	"bugs": "https://github.com/ryanluker/vscode-coverage-gutters/issues",
	"publisher": "ryanluker",
	"engines": {
		"vscode": "^1.59.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"gutters",
		"code coverage",
		"lcov",
		"vscode",
		"xml",
		"multi-root ready"
	],
	"main": "./out/src/extension",
	"contributes": {
		"configuration": {
			"title": "coverage-gutters",
			"properties": {
				"coverage-gutters.highlightlight": {
					"type": "string",
					"default": "rgba(0, 255, 64, 0.2)",
					"description": "light themed highlight for code coverage"
				},
				"coverage-gutters.highlightdark": {
					"type": "string",
					"default": "rgba(0, 122, 30, 0.4)",
					"description": "dark themed highlight for code coverage"
				},
				"coverage-gutters.partialHighlightLight": {
					"type": "string",
					"default": "rgba(255, 235, 0, 0.2)",
					"description": "light theme partial highlight for code coverage"
				},
				"coverage-gutters.partialHighlightDark": {
					"type": "string",
					"default": "rgba(163, 149, 0, 0.4)",
					"description": "dark theme partial highlight for code coverage"
				},
				"coverage-gutters.noHighlightLight": {
					"type": "string",
					"default": "rgba(255, 0, 0, 0.2)",
					"description": "light theme partial highlight for code coverage"
				},
				"coverage-gutters.noHighlightDark": {
					"type": "string",
					"default": "rgba(163, 0, 0, 0.4)",
					"description": "dark theme partial highlight for code coverage"
				},
				"coverage-gutters.gutterIconPathLight": {
					"type": "string",
					"description": "path to an icon (svg, png, etc) for displaying in the gutter for full coverage"
				},
				"coverage-gutters.gutterIconPathDark": {
					"type": "string",
					"description": "path to an icon (svg, png, etc) for displaying in the gutter for full coverage"
				},
				"coverage-gutters.partialGutterIconPathLight": {
					"type": "string",
					"description": "path to an icon (svg, png, etc) for displaying in the gutter for partial coverage"
				},
				"coverage-gutters.partialGutterIconPathDark": {
					"type": "string",
					"description": "path to an icon (svg, png, etc) for displaying in the gutter for partial coverage"
				},
				"coverage-gutters.noGutterIconPathLight": {
					"type": "string",
					"description": "path to an icon (svg, png, etc) for displaying in the gutter for no coverage"
				},
				"coverage-gutters.noGutterIconPathDark": {
					"type": "string",
					"description": "path to an icon (svg, png, etc) for displaying in the gutter for no coverage"
				},
				"coverage-gutters.showLineCoverage": {
					"type": "boolean",
					"default": false,
					"description": "show or hide the line coverage"
				},
				"coverage-gutters.showRulerCoverage": {
					"type": "boolean",
					"default": false,
					"description": "show or hide the ruler coverage"
				},
				"coverage-gutters.showGutterCoverage": {
					"type": "boolean",
					"default": true,
					"description": "show or hide the gutter coverage"
				},
				"coverage-gutters.ignoredPathGlobs": {
					"type": "string",
					"default": "**/{node_modules,venv,.venv,vendor}/**",
					"description": "paths that will be ignored by the extension"
				},
				"coverage-gutters.remotePathResolve": {
					"type": "array",
					"default": [],
					"description": "helps with coverage generated outside the local file system by swapping fragments of remote paths with local ones (EG ['/var/www/', '/home/project/']). See https://github.com/ryanluker/vscode-coverage-gutters/issues/201 for more info."
				},
				"coverage-gutters.manualCoverageFilePaths": {
					"type": "array",
					"default": [],
					"description": "take manual control over the absolute path to your coverage file(s)"
				},
				"coverage-gutters.coverageBaseDir": {
					"type": "string",
					"default": "**",
					"description": "workspaceFolder relative path or glob that will be used for coverage file lookup `${coverageBaseDir}/{${coverageFileNames}}`"
				},
				"coverage-gutters.coverageFileNames": {
					"type": "array",
					"default": [
						"lcov.info",
						"cov.xml",
						"coverage.xml",
						"jacoco.xml"
					],
					"description": "coverage file names for the extension to automatically look for"
				},
				"coverage-gutters.coverageReportFileName": {
					"type": "string",
					"default": "coverage/**/index.html",
					"description": "default coverage report file names(can be glob style) to look for when using the preview command"
				},
				"coverage-gutters.customizable.status-bar-toggler-watchCoverageAndVisibleEditors-enabled": {
					"type": "boolean",
					"default": true,
					"description": "enable or disable the status bar item"
				},
				"coverage-gutters.customizable.context-menu": {
					"type": "boolean",
					"default": true,
					"description": "enable or disable quick commands in the context menu"
				}
			}
		},
		"commands": [
			{
				"command": "coverage-gutters.previewCoverageReport",
				"title": "Coverage Gutters: Preview Coverage Report"
			},
			{
				"command": "coverage-gutters.displayCoverage",
				"title": "Coverage Gutters: Display Coverage"
			},
			{
				"command": "coverage-gutters.watchCoverageAndVisibleEditors",
				"title": "Coverage Gutters: Watch"
			},
			{
				"command": "coverage-gutters.removeWatch",
				"title": "Coverage Gutters: Remove Watch"
			},
			{
				"command": "coverage-gutters.removeCoverage",
				"title": "Coverage Gutters: Remove Coverage"
			}
		],
		"keybindings": [
			{
				"command": "coverage-gutters.previewCoverageReport",
				"key": "ctrl+shift+6",
				"mac": "shift+cmd+6"
			},
			{
				"command": "coverage-gutters.displayCoverage",
				"key": "ctrl+shift+7",
				"mac": "shift+cmd+7"
			},
			{
				"command": "coverage-gutters.watchCoverageAndVisibleEditors",
				"key": "ctrl+shift+8",
				"mac": "shift+cmd+8"
			},
			{
				"command": "coverage-gutters.removeWatch",
				"key": "ctrl+shift+9",
				"mac": "shift+cmd+9"
			},
			{
				"command": "coverage-gutters.removeCoverage",
				"key": "ctrl+shift+0",
				"mac": "shift+cmd+0",
				"win": "ctrl+shift+backspace"
			}
		],
		"menus": {
			"editor/context": [
				{
					"when": "config.coverage-gutters.customizable.context-menu",
					"command": "coverage-gutters.previewCoverageReport",
					"group": "Coverage-Gutters@1"
				},
				{
					"when": "config.coverage-gutters.customizable.context-menu",
					"command": "coverage-gutters.displayCoverage",
					"group": "Coverage-Gutters@2"
				},
				{
					"when": "config.coverage-gutters.customizable.context-menu",
					"command": "coverage-gutters.watchCoverageAndVisibleEditors",
					"group": "Coverage-Gutters@3"
				},
				{
					"when": "config.coverage-gutters.customizable.context-menu",
					"command": "coverage-gutters.removeWatch",
					"group": "Coverage-Gutters@4"
				},
				{
					"when": "config.coverage-gutters.customizable.context-menu",
					"command": "coverage-gutters.removeCoverage",
					"group": "Coverage-Gutters@5"
				}
			]
		}
	},
	"activationEvents": [
		"*"
	],
	"scripts": {
		"lint": "tslint './src/**/*.ts' './test/**/*.ts'",
		"pretty": "tslint --fix './src/**/*.ts' './test/**/*.ts'",
		"pre-commit": "lint-staged",
		"test": "npm run compile && node ./out/test/runTest.js",
		"test-headless": "xvfb-run -a npm run test",
		"test-unit": "cross-env MOCHA_GREP=@unit npm test --silent",
		"test-unit-headless": "xvfb-run -a npm run test-unit",
		"test-integration": "cross-env MOCHA_GREP=@integration npm test --silent",
		"test-integration-headless": "xvfb-run -a npm run test-integration",
		"vscode:prepublish": "tsc -p ./",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"build": "npm install && npm run lint && npm run compile",
		"prepare": "husky install"
	},
	"lint-staged": {
		"{src,test}/**/*.ts": [
			"tslint --fix"
		]
	},
	"devDependencies": {
		"@types/chai": "4.2.19",
		"@types/glob": "7.1.1",
		"@types/lodash": "4.14.126",
		"@types/mocha": "8.2.2",
		"@types/node": "10.14.6",
		"@types/request": "2.48.1",
		"@types/sinon": "10.0.2",
		"@types/sinon-chai": "3.2.5",
		"@types/uuid": "8.0.0",
		"@types/vscode": "1.59.0",
		"chai": "4.3.4",
		"cross-env": "5.2.0",
		"husky": "6.0.0",
		"lint-staged": "11.0.0",
		"mocha": "9.0.1",
		"sinon": "11.1.1",
		"sinon-chai": "3.7.0",
		"tslint": "5.16.0",
		"typescript": "4.2.3",
		"vscode-test": "1.5.2"
	},
	"dependencies": {
		"@cvrg-report/clover-json": "0.3.2",
		"cobertura-parse": "github:vokal/cobertura-parse#53109a6",
		"glob": "7.1.4",
		"jacoco-parse": "2.0.1",
		"lcov-parse": "1.0.0",
		"uuid": "8.2.0"
	},
	"__metadata": {
		"id": "188277b8-e4bc-4c10-92fa-d6959b4243ea",
		"publisherId": "7f2bc008-7e78-4244-8987-7df4385701ff",
		"publisherDisplayName": "ryanluker",
		"isPreReleaseVersion": false,
		"installedTimestamp": 1643980321709
	}
}